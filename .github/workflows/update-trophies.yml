---
name: Update Trophies in README

on:
  schedule:
    - cron: '0 0 * * *'  # Runs every day at midnight
  workflow_dispatch:  # Allow manual trigger
  push:
    branches: [main]
    paths: ['.github/workflows/update-trophies.yml']

permissions:
  contents: write

jobs:
  update-trophies:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install requests
        run: pip install requests

      - name: Fetch and filter trophies, update README
        env:
          GITHUB_USERNAME: DevRitesh08
        run: |
          python <<'EOF'
          import os
          import re
          import requests
          from time import sleep

          username = os.getenv("GITHUB_USERNAME")
          if not username:
              print("‚ùå GITHUB_USERNAME not set")
              exit(1)

          # List of trophy services to try (in order of preference)
          trophy_services = [
              f"https://github-readme-trophy.vercel.app/?username={username}&theme=onestar&margin-w=10",
              f"https://github-profile-trophy.now.sh/?username={username}&theme=onestar&margin-w=10",
              f"https://trophy-ryo-ma.vercel.app/?username={username}&theme=onestar&margin-w=10",
              f"https://github-trophies.vercel.app/?username={username}&theme=onestar&margin-w=10"
          ]

          working_trophy_url = None
          
          # Test each service to find a working one
          for trophy_url in trophy_services:
              try:
                  print(f"Testing trophy service: {trophy_url}")
                  response = requests.get(trophy_url, timeout=10)
                  if response.status_code == 200 and len(response.content) > 1000:  # Ensure it's not just an error page
                      working_trophy_url = trophy_url
                      print(f"‚úÖ Found working trophy service: {trophy_url}")
                      break
                  else:
                      print(f"‚ùå Service returned status {response.status_code} or insufficient content")
              except Exception as e:
                  print(f"‚ùå Service failed: {e}")
                  continue
              sleep(1)  # Be nice to services

          # Fallback if no trophy service works - use achievement-style badges
          if not working_trophy_url:
              print("‚ö†Ô∏è No trophy service available, using achievement badges as primary display")
              trophy_md = f'''<div align="center">
  <h4>üèÜ GitHub Achievements üèÜ</h4>
  
  <!-- Primary achievement display using GitHub's reliable services -->
  <img src="https://img.shields.io/github/followers/{username}?style=social&label=Followers" alt="GitHub Followers"/>
  <img src="https://img.shields.io/github/stars/{username}?style=social&label=Total Stars" alt="GitHub Stars"/>
  
  <br/><br/>
  
  <!-- Achievement badges -->
  <img src="https://img.shields.io/badge/üèÜ_Profile-Optimized-brightgreen?style=for-the-badge" alt="Profile Optimized"/>
  <img src="https://img.shields.io/badge/üíª_Developer-Active-blue?style=for-the-badge" alt="Active Developer"/>
  <img src="https://img.shields.io/badge/üìà_Growth-Continuous-orange?style=for-the-badge" alt="Continuous Growth"/>
  
  <br/><br/>
  
  <!-- GitHub stats as achievements -->
  <img src="https://img.shields.io/badge/dynamic/json?color=brightgreen&style=flat-square&label=Public%20Repos&query=%24.public_repos&url=https://api.github.com/users/{username}" alt="Public Repos"/>
  
  <!-- Fallback trophy image that attempts to load from the most reliable service -->
  <div style="margin-top: 10px;">
    <img src="https://github-readme-trophy.vercel.app/?username={username}&theme=onestar&margin-w=10" 
         alt="üèÜ GitHub Trophies" 
         style="max-width: 100%;"
         onerror="this.style.display='none';">
  </div>
</div>'''
          else:
              print(f"‚úÖ Using working trophy service: {working_trophy_url}")
              trophy_md = f'''<div align="center">
  <h4>üèÜ GitHub Achievements üèÜ</h4>
  
  <!-- GitHub trophy display -->
  <img src="{working_trophy_url}" alt="üèÜ GitHub Trophies" style="max-width: 100%;">
  
  <!-- Backup achievement badges -->
  <div style="margin-top: 10px;">
    <img src="https://img.shields.io/github/followers/{username}?style=social&label=Followers" alt="GitHub Followers"/>
    <img src="https://img.shields.io/github/stars/{username}?style=social&label=Total Stars" alt="GitHub Stars"/>
    <br/>
    <img src="https://img.shields.io/badge/üèÜ_Profile-Optimized-brightgreen?style=for-the-badge" alt="Profile Optimized"/>
    <img src="https://img.shields.io/badge/üíª_Developer-Active-blue?style=for-the-badge" alt="Active Developer"/>
  </div>
</div>'''

          with open("README.md", "r", encoding="utf-8") as f:
              readme = f.read()

          new_readme = re.sub(
              r'<!-- TROPHY_SECTION_START -->(.*?)<!-- TROPHY_SECTION_END -->',
              f'<!-- TROPHY_SECTION_START -->\n{trophy_md}\n<!-- TROPHY_SECTION_END -->',
              readme,
              flags=re.DOTALL,
          )

          with open("README.md", "w", encoding="utf-8") as f:
              f.write(new_readme)
              
          print("‚úÖ README.md updated successfully")
          EOF

      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git fetch origin main
          git rebase origin/main
          git add README.md
          git diff --cached --quiet || git commit -m "üîÑ Update trophies in README [CI]"
          git push origin HEAD:main
